$date
   Tue Dec  6 02:34:13 2022
$end
$version
  2019.1
$end
$timescale
  1ps
$end
$scope module fourBitRegAsync_testbench $end
$var reg 4 ! D [3:0] $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$var reg 1 $ enable $end
$var wire 4 % Q [3:0] $end
$scope module dut $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var wire 1 ( enable $end
$var wire 4 ) D [3:0] $end
$var reg 4 * Q [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
x"
0#
0$
bx %
x&
0'
0(
b0 )
bx *
$end
#5000
b1 !
0#
1$
1(
b1 )
#10000
b10 !
1#
0$
b0 %
1'
0(
b10 )
b0 *
#15000
b11 !
1#
1$
1(
b11 )
#20000
b100 !
0#
0$
0'
0(
b100 )
#25000
b101 !
0#
1$
1(
b101 )
#30000
b110 !
1#
0$
1'
0(
b110 )
b0 *
#35000
b111 !
1#
1$
1(
b111 )
#40000
b1000 !
0#
0$
0'
0(
b1000 )
#45000
b1001 !
0#
1$
1(
b1001 )
#50000
b1010 !
1#
0$
1'
0(
b1010 )
b0 *
#55000
b1011 !
1#
1$
1(
b1011 )
#60000
b1100 !
0#
0$
0'
0(
b1100 )
#65000
b1101 !
0#
1$
1(
b1101 )
#70000
b1110 !
1#
0$
1'
0(
b1110 )
b0 *
#75000
b1111 !
1#
1$
1(
b1111 )
